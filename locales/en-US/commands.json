{
  "bgm": {
    "name": "bgm",
    "description": "Shows BGM playlists that the developer of this bot shares, and you can choose and play them.",
    "listOfPresetBGM": "Available BGM Presets"
  },
  "bulk_delete": {
    "name": "bulkdelete",
    "usage": "bulkdelete <message count>",
    "examples": "bulkdelete 10",
    "description": "Deletes messages the bot sent. Fetches and finds in recent 1000 messages.",
    "invalidMessageCount": "Provided message count is invalid.",
    "found_one": "{{count}} message found.",
    "inCount_other": "in {{count}} messages",
    "inCount_one": "in {{count}} message",
    "found_other": "{{count}} messages found.",
    "confirm": "Press the button below to confirm bulk-deletion of messages.\nIf not, the operation will be automatically cancelled after a while.",
    "auditLog_one": "Because {{issuer}} requested to delete {{count}} message.",
    "auditLog_other": "Because {{issuer}} requested to delete {{count}} messages.",
    "finish": "Done! (This message will be deleted automatically)",
    "cancel": "Canceled the deletions.",
    "hitCount_other": "{{count}} messages found.",
    "hitCount_one": "{{count}} message found.",
    "loading": "Fetching",
    "args": {
      "count": {
        "description": "The maximum number of messages to be deleted. This should be 100 or less."
      }
    }
  },
  "bulk_play": {
    "name": "bulk_play",
    "usage": "bulk_play <URL or keyword> <URL or keyword> ...",
    "examples": "bulk_play \"songA\" \"songB\" \"songC\"",
    "description": "Bulk-adds and play multiple songs.",
    "args": {
      "keyword1": {
        "description": "Keyword or URL of the song you want to play."
      },
      "keyword2": {
        "description": "Keyword or URL of the song you want to play."
      },
      "keyword3": {
        "description": "Keyword or URL of the song you want to play."
      },
      "keyword4": {
        "description": "Keyword or URL of the song you want to play."
      },
      "keyword5": {
        "description": "Keyword or URL of the song you want to play."
      }
    },
    "partialSuccess": "Some part of songs you requested couldn't be found."
  },
  "cancel": {
    "name": "cancel",
    "description": "Aborts all operations that can be canceled.",
    "canceling": "Canceling all operations that can be canceled....",
    "noCancelable": "There's no task to be canceled."
  },
  "command": {
    "name": "command",
    "usage": "command [name]",
    "examples": "command search",
    "description": "Shows list of commands. If you specify a command, shows details of the command.",
    "args": {
      "command": {
        "description": "The command to show the details."
      }
    },
    "categories": {
      "voice": "Voice Connection Related",
      "player": "Music Player Related",
      "playlist": "Playlist Related",
      "utility": "Utilities",
      "bot": "Bot Operation",
      "settings": "Settings"
    },
    "commandList": "Command List",
    "toLearnMoreMessage": "Like `{{prefix}}command play`, you can add a command name as an argument to display the details of that command.",
    "toLearnMoreInteraction": "Like `/command play`, you can add a command name as an argument to display the details of that command.",
    "commandExplanation": "Details of Command `{{command}}`",
    "usageLabel": "Usage",
    "exampleLabel": "Example",
    "argumentDescription": "The arguments in `<>` are required and the arguments in `[]` are optional.",
    "commandNotFound": "Command not found"
  },
  "disconnect": {
    "name": "disconnect",
    "description": "Disconnects from voice channel."
  },
  "effect": {
    "name": "effect",
    "description": "Shows effect control panel.",
    "effectControllPanel": {
      "title": "Effect Control Panel",
      "description": "You can enable/disable audio effects.\n`-` The button appearance may not show the actual current status. They will be updated when toggling the effect, or pressing the Update button.\n`-` All changes will be effected from the next song.\nIf you'd like to apply to the current playing song, use the command `rewind`.\n",
      "footer": "Choose an effect you want to apply and press the button.",
      "reload": "Update"
    }
  },
  "end": {
    "name": "end",
    "description": "Removes all songs from queue except for the current playing song (or the song waiting to be played).",
    "queueWasEmpty": "Nothing was removed because of no items or just one item in queue.",
    "success": "Deleted all items left in queue."
  },
  "equalplayback": {
    "name": "equalplayback",
    "description": "Plays same amount of songs for each user.",
    "enabled": "Enabled equal playback.",
    "disabled": "Disabled equal playback.",
    "featureDescription": "This is a function that makes it as even as possible for each user who added songs when playing songs."
  },
  "export": {
    "name": "export",
    "description": "Exports content of the queue so that it can be imported.",
    "queueEmpty": "Unable to export queue due to no items in queue.",
    "exported": "Exported",
    "compatiblity": "Version: v{{version}} compatible",
    "importInstruction": "When you import, set \"<{{url}}>\" for the argument of command `import`."
  },
  "frame": {
    "name": "frame",
    "examples": "frame 1:20",
    "usage": "frame [time]",
    "description": "Gets a frame image of the video at the current playback position, if possible. Gets the frame at that point if an argument is specified.",
    "args": {
      "time": {
        "description": "Gets the frame at that point if specified."
      }
    },
    "unsupported": "The source does not support the frame capture function.",
    "fallbacking": "This feature is not currently available as we are using an unconventional method.",
    "liveStreamWithTime": "Unable to specify the time on livestream.",
    "invalidTime": "Incorrect time specification.",
    "capturing": "Capturing",
    "finish": "Done!",
    "timeAt": "at {{hour}}:{{min}}:{{sec}}",
    "failed": "Failed to capture..."
  },
  "help": {
    "name": "help",
    "description": "Shows help.",
    "embedDescription": "Made for your experiences in Discord with high-quality songs",
    "toLearnMore": "Use {{command}} to show all available commands.",
    "developer": "Developer",
    "version": "Version",
    "repository": "Repository",
    "sourceCode": "Source code",
    "supportServer": "Support server",
    "availableSources": "Available Audio Sources",
    "keywordSearch": "keyword search",
    "videoUrl": "Specify video URL",
    "playlistUrl": "Specify playlist URL",
    "musicPageUrl": "Music page URL specification",
    "discordAttachmentUrl": "URL specification of message with audio file attachment",
    "driveShareUrl": "URL specification of private link of audio file",
    "tweetUrl": "Specify Tweet URL",
    "spotify": "Song URLs, and playlist URLs. Guess the song and play it from YouTube.",
    "custom": "Direct URL to audio file",
    "googleDrive": "Google Drive",
    "niconico": "Nico-Nico Douga"
  },
  "import": {
    "name": "import",
    "messageCommandName": "Import",
    "description": "Imports queue from the specified message. Specify the URL of the message that has a file exported by `export` command.",
    "examples": "import https://discord.com/channels/...",
    "usage": "import <URL>",
    "args": {
      "url": {
        "description": "URL of the message to import from. You can specify URL of the message with the ymx file attached output by export command."
      }
    },
    "invalidArgumentMessage": "Send the URL of a message as an argument that has an exported queue.",
    "noDiscordLink": "Provide a link to your Discord message.",
    "invalidLink": "The provided URL is invalid.",
    "loadingMessage": "Fetching message",
    "notBotMessage": "Not a message sent by bot",
    "versionIncompatible": "The specified file cannot be imported because the versions are incompatible.",
    "current": "Current",
    "file": "File",
    "contentNotIncludedInMessage": "The target content was not found."
  },
  "invoke": {
    "name": "invoke",
    "description": "Executes the specified command. Please do not use it basically.",
    "usage": "invoke <command>",
    "examples": "invoke play Into The Night",
    "args": {
      "command": {
        "description": "Command to execute"
      }
    },
    "recursiveInvoke": "You cannot use the `invoke` command with `invoke` command.",
    "executed": "Executed",
    "commandNotFound": "Command not found",
    "specialCommandNotFound": "Special command not found."
  },
  "join": {
    "name": "connect",
    "description": "Joins voice channel.",
    "alreadyConnected": "Already connected to the voice channel."
  },
  "leaveclean": {
    "name": "leaveclean",
    "description": "Cleans up by removing queued songs requested by people who left your voice channel.",
    "allRemoved": "Removed all items",
    "queueEmpty": "Queue empty",
    "removed_one": "deleted {{count}} item",
    "removed_other": "deleted {{count}} items",
    "removedNothing": "No item to remove."
  },
  "log": {
    "name": "systeminfo",
    "description": "Displays technical information about hosted servers and processes. You can also specify arguments (one of `mem`, `cpu`, `basic`, and `log`) to get only specific contents.",
    "examples": "log mem",
    "usage": "log [mem|cpu|basic|log]",
    "args": {
      "content": {
        "description": "You can choose from basic, mem, cpu and log.",
        "choices": {
          "basic": "Basic information",
          "mem": "Memory",
          "cpu": "CPU",
          "log": "Log (administrator only)"
        }
      }
    },
    "executing": "Executing...",
    "guildName": "Server name",
    "participatingGuildCount": "Servers Participating",
    "registeredGuildCount": "Number of Servers Holding Data",
    "connectingGuildCount": "Server(s) Connecting",
    "playingGuildCount": "Server(s) Playing (include paused)",
    "pausedGuildCount": "Server(s) Paused",
    "guildSearchResult": "The Result of Inquiring the Server (SECRET)",
    "guildId": "Server ID",
    "guildIcon": "Server Icon",
    "guildChannelCountFromCache": "Channel Count (cached)",
    "guildConnecting": "Connecting",
    "guildPlaying": "Playing/Paused",
    "guildPaused": "Paused",
    "itemsInQueue": "Item(s) in Queue",
    "currentTransformingCost": "Current Transforming Cost",
    "liveStream": "Livestream",
    "memberCount": "Members",
    "version": "Version",
    "managedCollectorsID": "Managed Collector Custom IDs",
    "managedCollectors": "Managed Collectors",
    "totalCost": "Current Total Transforming Costs",
    "memCacheTotal": "Memory Cache Total Count",
    "memCacheGarbage": "Memory Cache Garbage Count",
    "persistentCache": "Persistent Cache Size",
    "modules": "Modules",
    "incorrectArgument": "Set the correct argument."
  },
  "loop": {
    "name": "loop",
    "description": "Toggles looping the current playing song.",
    "disabled": "Disabled track loop.",
    "enabled": "Enabled track loop."
  },
  "looponce": {
    "name": "looponce",
    "description": "After the current playback ends, play the same song again in a loop.",
    "disabled": "Disabled loop once",
    "enabled": "Enabled loop once"
  },
  "loopqueue": {
    "disabled": "Disabled queue loop.",
    "enabled": "Enabled queue loop.",
    "name": "loopqueue",
    "description": "Toggles looping the entire queue."
  },
  "lyrics": {
    "name": "lyrics",
    "description": "Finds lyrics of the specified song.",
    "examples": "l Into The Night",
    "usage": "l <ex. titles, artists and so on>",
    "args": {
      "keyword": {
        "description": "Keywords to search for songs"
      }
    },
    "embedTitle": "\"{{title}}\"({{artist}}) lyrics",
    "failed": "Failed to show lyrics. Please check the song name and try again."
  },
  "move": {
    "name": "move",
    "description": "Moves the song from the specified position to the specified position in the queue. If you want to move the 2nd song to the 5th, use `mv 2 5`.",
    "examples": "move 2 5",
    "usage": "move <from> <to>",
    "args": {
      "from": {
        "description": "Index to move from. It is written together with the queue."
      },
      "to": {
        "description": "Index to move to. It is written together with the queue."
      }
    },
    "invalidArgumentCount": "Index to move to. It is written together with the queue.",
    "invalidIndex": "You cannot specify 0 for moving from or to while the music is playing (or paused).",
    "moved": "Moved `{{title}}` from position `{{from}}` to `{{to}}`.",
    "originEqualsDestination": "The source and destination songs were the same.",
    "indexOutOfRange": "Failed to move. The argument is out of queue range."
  },
  "movelastsongtofirst": {
    "name": "lastsongtotop",
    "description": "Moves the last song in the queue to the top of the queue.",
    "usableWhen3orMoreQueue": "You can use this command when 3 or more items are present in queue.",
    "success": "Moved `{{title}}` from the last to the top of queue."
  },
  "news": {
    "name": "news",
    "description": "Shows news topics that are currently being distributed.",
    "newsTopics": "News topic"
  },
  "nowplaying": {
    "name": "nowplaying",
    "description": "Displays information about the currently playing song. An argument of `l` (True for slash commands) displays a longer summary. (if possible)",
    "args": {
      "detailed": {
        "description": "If set to True, show details as long as possible."
      }
    },
    "nowPlayingSong": "Now playing"
  },
  "pause": {
    "name": "pause",
    "description": "Pauses the current playing song.",
    "alreadyPaused": "Already paused",
    "usePlayToResume": "To resume playing, use command `play`.",
    "paused": "Paused"
  },
  "ping": {
    "name": "ping",
    "description": "Shows latency.",
    "pingInfo": "Ping Info",
    "botMessageReceive": "Fetching Messages",
    "botWebSocketConnection": "Web Socket Connection",
    "voiceWsConnection": "WebSocket Connection to Voice Channel"
  },
  "play": {
    "name": "play",
    "messageCommandName": "Play",
    "description": "Plays songs in queue. You can also specify keywords or URLs of songs as an argument.",
    "args": {
      "keyword": {
        "description": "Keyword or URL of the video to play. If not connected to VC, connect and play that song with priority. Adds to the end of the queue if it is connected. If paused, the option is ignored and playback resumes."
      },
      "audiofile": {
        "description": "You can upload and listen to supported audio files."
      }
    },
    "noContent": "There's no content to play.",
    "resuming": "Resuming",
    "noMusicFound": "No results found.",
    "playing": "Starting to play",
    "alreadyPlaying": "It's playing just now.",
    "queueEmpty": "Queue is empty. No content to play."
  },
  "play_private": {
    "description": "Adds a new song from the URL to queue secretly, and starts playing if possible.",
    "noInteraction": "Unable to use this command by text-based-message.",
    "modalTitle": "What would you like to play?",
    "inputLabel": "URL of the song you'd like to play."
  },
  "queue": {
    "name": "queue",
    "description": "Shows queue.",
    "args": {
      "page": {
        "description": "You can specify which page of queues to display."
      }
    },
    "queueEmpty": "Queue empty",
    "pageOutOfRange": "The page you provided is out of the range.",
    "songCount_one": "{{count}} song",
    "songCount_other": "{{count}} songs",
    "total": "Total"
  },
  "radio": {
    "name": "radio",
    "description": "Starts or stops a radio (mix list) based on the specified URL of the song. If you specified nothing, starts a new radio from the current playing song.",
    "args": {
      "url": {
        "description": "URL on YouTube of the song that the radio is based on."
      }
    },
    "alreadyEnabled": "The radio is already enabled. If you want to start a new radio based on another song, you need to disable the mix list that is currently played at first.",
    "noUrlSpecified": "Provide a URL of the song that the radio will be based on.",
    "invalidUrl": "The provided URL is not valid one on YouTube.",
    "started": "Started a radio based on the specified song.",
    "startedFromCurrentSong": "Started a radio based on the current playing song.",
    "stopped": "Radio stopped."
  },
  "related": {
    "name": "related",
    "description": "Enables/disables the function that automatically adds related songs to queue when a song from YouTube finishes playing.",
    "disabled": "Disabled autoplaying related songs.",
    "enabled": "Enabled autoplaying related songs.",
    "featureDescription": "This is a function that automatically adds related songs to the end of the queue when a song from YouTube finishes playing.",
    "featureNote": "\\* Nothing will be added when playing songs not from YouTube, or loop enabled."
  },
  "remove": {
    "name": "remove",
    "description": "Removes the specified songs in queue.",
    "examples": "rm 5",
    "usage": "remove <the position of the song you want to remove>",
    "args": {
      "index": {
        "description": "The index to be removed is the one that is listed with the queue. You can also use hyphen to specify a range like 2-5, or spaces to specify multiple like 1 4 8."
      }
    },
    "noArgument": "Enter the offset (number) of the song to be removed in the argument.",
    "invalidArgument": "Unable to remove the current playing song.",
    "removedAt": "Removed the song(s) {{title}} at position {{indexes}}.",
    "removedMany": "Removed the specified songs.",
    "unableToRemoveAt": "Unable to remove the songs at position {{indexes}} due to lack of permission.",
    "unableToRemoveMany": "Unable to remove some specified songs due to lack of permission.",
    "unableToRemoveAll": "No items could be removed. You may not satisfy the required permission to remove the requested songs."
  },
  "removeall": {
    "name": "removeall",
    "description": "Removes all items from queue. (will disconnect from the voice channel if connected to.)",
    "removed": "Cleared"
  },
  "removedupes": {
    "name": "removedupes",
    "description": "Removes duplicated songs in queue.",
    "removedMany": "Removed duplicated songs.",
    "removedAt": "Removed the song(s) {{title}} at position {{indexes}}.",
    "noSongRemoved": "No duplicated songs that can be deleted."
  },
  "reset": {
    "name": "reset",
    "description": "Resets all the data such as queue, settings and any other data. Specify true as an argument to preserve queue.\n\\* The bot will disconnect from the voice channel if connected to.",
    "success": "Successfully reset the server settings.",
    "usage": "reset true",
    "args": {
      "preservequeue": {
        "description": "Specify True to keep the queue. If this does not solve the problem, specify False and try again."
      }
    }
  },
  "rewind": {
    "name": "rewind",
    "description": "Rewinds the current playing song.",
    "success": "Successfully rewound."
  },
  "search": {
    "name": "search",
    "description": "Shows a list of songs that match the search query on YouTube.",
    "examples": "search Into The Night",
    "usage": "search <keyword>",
    "args": {
      "keyword": {
        "description": "Keyword or URL of the video you want to search for."
      }
    },
    "noArgument": "Set the argument."
  },
  "searchnico": {
    "name": "searchnico",
    "description": "Searches songs on Nico-Nico Douga.",
    "examples": "searchnico setsuna trip",
    "usage": "searchnico <keyword>",
    "args": {
      "keyword": {
        "description": "Keyword or URL of the song you want to search for."
      }
    },
    "noArgument": "Set the argument."
  },
  "searchqueue": {
    "name": "searchqueue",
    "description": "Searches in queue. Specify keywords for the argument.",
    "examples": "seq pretender",
    "usage": "seq <keyword>",
    "args": {
      "keyword": {
        "description": "Keyword of the song you want to search for"
      }
    },
    "queueEmpty": "Queue is empty",
    "embedDescription": "Search results in queue. Up to 20 items are displayed."
  },
  "searchsoundcloud": {
    "name": "searchsoundcloud",
    "description": "Shows a list of songs that match the search query on SoundCloud.",
    "examples": "ses sakura trip",
    "usage": "ses <keyword>",
    "args": {
      "keyword": {
        "description": "Keyword or URL of the song you want to search for."
      }
    }
  },
  "seek": {
    "name": "seek",
    "description": "Seeks to a certain point in the current playing song.",
    "examples": "seek 0:30",
    "usage": "seek <time(seconds or in the format \"hours:minutes:seconds\")>",
    "args": {
      "keyword": {
        "description": "Seek to time"
      }
    },
    "unseekable": "The current playing song is not seek-able.",
    "invalidTime": "Seeks to incorrect time.",
    "seeking": "Seeking",
    "success": "Seeked",
    "failed": "Seek failed"
  },
  "setting": {
    "name": "setting",
    "description": "Changes the bot's settings."
  },
  "setting>skipvote": {
    "name": "setting>skipvote",
    "description": "Configures if skip-vote is enabled or not. Shows current setting with no option provided.",
    "args": {
      "enabled": {
        "description": "If you want to enable skip-vote feature, specify true. Otherwise, false."
      }
    },
    "currentState": "The skip-vote feature is currently **{{status}}**.",
    "changed": "The skip-vote feature is now **{{status}}**."
  },
  "setting>nowplaying": {
    "name": "setting>nowplaying",
    "description": "Configures the display mode of now-playing embeds. Shows the current setting with no option provided.",
    "args": {
      "level": {
        "description": "Specify a display mode of the now-playing embeds.",
        "choices": {
          "normal": "Normal",
          "silent": "Silent",
          "disabled": "Disabled"
        }
      }
    },
    "invalidLevel": "The display-mode you specified was incorrect. Please specify one of three, \"normal\", \"silent\", or \"disabled\".",
    "changed": "The display-mode was set to **{{level}}**.",
    "currentState": "The current display mode was set to **{{level}}**."
  },
  "shuffle": {
    "name": "shuffle",
    "description": "Shuffles the queue.",
    "queueEmpty": "Queue empty.",
    "success": "Shuffled"
  },
  "skip": {
    "name": "skip",
    "description": "Skips the current playing song or shows skip vote according to the situation.",
    "preparing": "Unable to skip due to preparing to play a song now.",
    "votePanelAlreadyOpen": "There's already another skip vote opened.",
    "success": "Skipped `{{title}}`",
    "failed": "Skip failed"
  },
  "sleeptimer": {
    "name": "sleeptimer",
    "description": "Exits from the voice channel when the specific time elapsed.",
    "examples": "sleeptimer 5:00",
    "usage": "sleeptimer <time(formatted like \"mm:ss\") or $ (the end of the current playing song)>",
    "args": {
      "time": {
        "description": "Time you want to set a sleep timer. Type in \"mm:ss\" format, or $ to set the timer at the end of the current song."
      }
    },
    "done": "Successfully set the sleep timer in **{{time}}**.",
    "doneCurrentSong": "Successfully set the sleep timer at the end of the current song.",
    "canceled": "Canceled the sleep timer.",
    "invalidTime": "Invalid time specified. Type in the \"hh:mm:ss\" format to set the sleep timer in the manual time, or just \"$\" to set at the end of the current song.",
    "slept": "Disconnecting from the voice channel since it is a time the sleep timer set."
  },
  "thumbnail": {
    "name": "thumbnail",
    "description": "Shows the thumbnail of the current playing song. When a search result is opened and provided a number in the result, shows the thumbnail of the specified song.",
    "examples": "thumbnail 5",
    "usage": "thumbnail [a number in a search result]",
    "args": {
      "index": {
        "description": "If you specify an index in the search result, the thumbnail of that item will be displayed."
      }
    },
    "noSearchPanelFound": "There are no thumbnails to show."
  },
  "uptime": {
    "name": "uptime",
    "description": "Shows bot's uptime.",
    "embedTitle": "{{name}} uptime",
    "elapsedAfterInstantiated": "Elapsed Time since Bot Starts",
    "elapsedAfterConnected": "Elapsed Time since Connection Established",
    "registeredServerCount": "Number of Servers Holding Data",
    "datetimeLabel": "{{hour}} hours {{min}} minutes {{sec}} seconds",
    "serverCount_one": "{{count}} server",
    "serverCount_other": "{{count}} servers"
  },
  "volume": {
    "name": "volume",
    "description": "Changes the volume. When no argument provided, shows the current volume. The valid range of the volume is 1~200 (and 100 is the default). If it becomes unstable, set the volume to 100.",
    "examples": "volume [number]",
    "usage": "volume 120",
    "args": {
      "volume": {
        "description": "The volume you change to. Set between 1 and 200."
      }
    },
    "currentVolume": "Current volume is **{{volume}}**. (The default is 100.)",
    "outOfRange": "Please provide the value between 1 and 200.",
    "changed": "Changed the volume to **{{volume}}**.",
    "appliedFromNext": "It will be applied from the next song. If you'd like to apply to the current playing song, use command `rewind`."
  }
}
