name: Build Docker

on:
  push:
    branches:
      - master
      - v3
    paths:
      - "**/*.js"
      - "**/*.ts"
      - "package.json"
      - "package-lock.json"
      - ".github/workflows/build-docker.yml"
      - "Dockerfile"
  release:
    types:
      - published
  schedule:
    - cron: "0 15 * * 0"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with: 
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set env vars for release
        run: echo "DOCKER_PLATFORMS=linux/amd64,linux/arm64" >> $GITHUB_ENV
        if: ${{ github.event_name == 'release' }}

      - name: Set env vars for others
        run: echo "DOCKER_PLATFORMS=linux/amd64" >> $GITHUB_ENV
        if: ${{ github.event_name != 'release' }}

      - name: Generate Docker meta
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.actor }}/discord-music-bot
          flavor: latest=false
          tags: |
            type=sha,enable=${{ github.event_name == 'release' }}
            type=sha,format=long
            type=semver,pattern={{version}},enable=${{ github.event_name == 'release' }}
            type=raw,value=latest,enable=${{ github.event_name == 'release' && !github.event.release.prerelease && github.event.release.target_commitish == 'master' }}
            type=raw,value=beta,enable=${{ github.event_name == 'release' && github.event.release.prerelease }}
            type=raw,value=dev,enable=${{ github.event_name == 'workflow_dispatch' }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ env.DOCKER_PLATFORMS }}
          push: ${{ github.event_name == 'release' || github.event_name == 'workflow_dispatch' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,mode=max,scope=docker
          cache-to: type=gha,mode=max,scope=docker
          context: .
          file: ./Dockerfile
          outputs: >-
            type=image,
            name=target,
            annotation-index.org.opencontainers.image.description=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.description'] }},
            annotation-index.org.opencontainers.image.source=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.source'] }},
            annotation-index.org.opencontainers.image.licenses=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.licenses'] }}
