{"version":3,"file":"fetch.js","sourceRoot":"","sources":["../../src/fetch.ts"],"names":[],"mappings":"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","sourcesContent":["import { CONTINUATION_URL, WATCH_URL } from './Constants.js';\r\nimport Context from './Context.js';\r\nimport { parseText } from './helper.js';\r\n\r\nexport async function getWatchPageResults(videoId: string, context: Context, rt = 3): Promise<any> {\r\n  if (rt === 0) {\r\n    throw Error(`Failed to obtain JSON data from watch page of video Id: ${videoId}`);\r\n  }\r\n\r\n  const query: any = { v: videoId };\r\n  if (context.endpointItem) query.list = context.endpointItem.id;\r\n  if (context.options.gl) query.gl = context.options.gl;\r\n  if (context.options.hl) query.hl = context.options.hl;\r\n\r\n  const params = new URLSearchParams(query);\r\n\r\n  const response = await context.fetchFn(WATCH_URL + params.toString());\r\n  const body = await response.text();\r\n  const json = getJsonFromBody(body);\r\n\r\n  // Retry if unable to find json\r\n  if (!json) return getWatchPageResults(videoId, context, rt - 1);\r\n\r\n  // Pass errors from the API\r\n  if (json.alerts && !json.contents) {\r\n    const error = json.alerts.find((a: any) => a?.alertRenderer?.type === 'ERROR');\r\n    if (error) {\r\n      throw Error(`API error returned by watch page of video Id ${videoId}: ${parseText(error.alertRenderer.text)}`);\r\n    }\r\n  }\r\n\r\n  return json;\r\n}\r\n\r\nfunction getJsonFromBody(body: string): any {\r\n  return jsonAfter(body, 'window[\"ytInitialData\"] = ') || jsonAfter(body, 'var ytInitialData = ');\r\n}\r\n\r\nfunction jsonAfter(haystack: string, left: string): any {\r\n  const pos = haystack.indexOf(left);\r\n  if (pos === -1) {\r\n    return null;\r\n  }\r\n  haystack = haystack.slice(pos + left.length);\r\n  try {\r\n    return JSON.parse(cutAfterJSON(haystack));\r\n  }\r\n  catch (e) {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction cutAfterJSON(mixedJson: string): string {\r\n  let open, close;\r\n  if (mixedJson?.[0] === '[') {\r\n    open = '[';\r\n    close = ']';\r\n  }\r\n  else if (mixedJson?.[0] === '{') {\r\n    open = '{';\r\n    close = '}';\r\n  }\r\n\r\n  if (!open) {\r\n    throw Error(`Failed to obtain JSON data: need to begin with '[' or '{' but got: '${mixedJson?.[0]}'.`);\r\n  }\r\n\r\n  // States if the loop is currently in a string\r\n  let isString = false;\r\n\r\n  // Current open brackets to be closed\r\n  let counter = 0;\r\n\r\n  for (let i = 0; i < mixedJson.length; i++) {\r\n    // Toggle the isString boolean when leaving/entering string\r\n    if (mixedJson[i] === '\"' && mixedJson[i - 1] !== '\\\\') {\r\n      isString = !isString;\r\n      continue;\r\n    }\r\n    if (isString) continue;\r\n\r\n    if (mixedJson[i] === open) {\r\n      counter++;\r\n    }\r\n    else if (mixedJson[i] === close) {\r\n      counter--;\r\n    }\r\n\r\n    // All brackets have been closed, thus end of JSON is reached\r\n    if (counter === 0) {\r\n      // Return the cut JSON\r\n      return mixedJson.substr(0, i + 1);\r\n    }\r\n  }\r\n\r\n  // We ran through the whole string and ended up with an unclosed bracket\r\n  throw Error('Failed to obtain JSON data: no matching closing bracket found.');\r\n}\r\n\r\nexport async function getContinuationResults(context: Context, token: string): Promise<any> {\r\n  const postData: any = {\r\n    context: {\r\n      client: {\r\n        clientName: 'WEB',\r\n        clientVersion: '2.20230331.00.00'\r\n      }\r\n    },\r\n    continuation: token\r\n  };\r\n  if (context.options.gl) postData.context.client.gl = context.options.gl;\r\n  if (context.options.hl) postData.context.client.hl = context.options.hl;\r\n\r\n  const response = await context.fetchFn(CONTINUATION_URL, {\r\n    method: 'POST',\r\n    body: JSON.stringify(postData),\r\n    headers: { 'Content-Type': 'application/json; charset=UTF-8' }\r\n  });\r\n\r\n  return await response.json();\r\n}\r\n"]}